/**
 * @name Codeblock_Identifier
 * @version 1.0.0
 * @author Ме́филес#9198
 * @authorId 376086802961793024
 * @description Revival of codeblockLangIdentifier by intrnl: "Shows the corresponding language's syntax highlighting that was used on the code block."
 * @updateUrl https://raw.githubusercontent.com/Mephiles-the-Dark/Better_Discord/master/Themes/Codeblock_Identifier
 * @source https://github.com/Mephiles-the-Dark/Better_Discord/tree/master/Themes
 * @invite sbA3xCJ
*/

@charset "UTF-8";
.markup-2BOw-j .hljs::before {
	pointer-events: none;
	display: block;
	margin: 0 0 10px 0;
	font-family: 'Whitney', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
}
.markup-2BOw-j .hljs[class~="1c" i]::before {content: "1C: Enterprise (1c)"}
.markup-2BOw-j .hljs[class~="abnf" i]::before {content: "Augmented Backus–Naur Form (abnf)"}
.markup-2BOw-j .hljs[class~="accesslog" i]::before {content: "Apache Access Log (accesslog)"}
.markup-2BOw-j .hljs[class~="actionscript" i]::before {content: "ActionScript"}
.markup-2BOw-j .hljs[class~="as" i]::before {content: "ActionScript (as)"}
.markup-2BOw-j .hljs[class~="ada" i]::before {content: "Ada"}
.markup-2BOw-j .hljs[class~="angelscript" i]::before {content: "AngelScript"}
.markup-2BOw-j .hljs[class~="asc" i]::before {content: "AngelScript (asc)"}
.markup-2BOw-j .hljs[class~="apache" i]::before {content: "(Apache) config"}
.markup-2BOw-j .hljs[class~="apacheconf" i]::before {content: "Apache config (apacheconf)"}
.markup-2BOw-j .hljs[class~="applescript" i]::before {content: "Applescript"}
.markup-2BOw-j .hljs[class~="osascript" i]::before {content: "Applescript (osascript)"}
.markup-2BOw-j .hljs[class~="arcade" i]::before {content: "ArcGIS (Arcade)"}
.markup-2BOw-j .hljs[class~="arduino" i]::before {content: "Arduino"}
.markup-2BOw-j .hljs[class~="ino" i]::before {content: "Arduino (ino)"}
.markup-2BOw-j .hljs[class~="armasm" i]::before {content: "ARM Assembly (armasm)"}
.markup-2BOw-j .hljs[class~="arm" i]::before {content: "(ARM) Assembly"}
.markup-2BOw-j .hljs[class~="html" i]::before {content: "(HTML),XML"}
.markup-2BOw-j .hljs[class~="xhtml" i]::before {content: "HTML,XML (xhtml)"}
.markup-2BOw-j .hljs[class~="xml" i]::before {content: "HTML,(XML)"}
.markup-2BOw-j .hljs[class~="rss" i]::before {content: "HTML,XML (rss)"}
.markup-2BOw-j .hljs[class~="atom" i]::before {content: "HTML,XML (atom)"}
.markup-2BOw-j .hljs[class~="xjb" i]::before {content: "HTML,XML (xjb)"}
.markup-2BOw-j .hljs[class~="xsd" i]::before {content: "HTML,XML (xsd)"}
.markup-2BOw-j .hljs[class~="xsl" i]::before {content: "HTML,XML (xsl)"}
.markup-2BOw-j .hljs[class~="plist" i]::before {content: "HTML,XML (plist)"}
.markup-2BOw-j .hljs[class~="wsf" i]::before {content: "HTML,XML (wsf)"}
.markup-2BOw-j .hljs[class~="svg" i]::before {content: "HTML,XML (svg)"}
.markup-2BOw-j .hljs[class~="asciidoc" i]::before {content: "AsciiDoc"}
.markup-2BOw-j .hljs[class~="adoc" i]::before {content: "AsciiDoc (adoc)"}
.markup-2BOw-j .hljs[class~="aspectj" i]::before {content: "AspectJ"}
.markup-2BOw-j .hljs[class~="autohotkey" i]::before {content: "AutoHotkey"}
.markup-2BOw-j .hljs[class~="ahk" i]::before {content: "AutoHotkey (ahk)"}
.markup-2BOw-j .hljs[class~="autoit" i]::before {content: "AutoIt"}
.markup-2BOw-j .hljs[class~="avrasm" i]::before {content: "AVR Assembly (avrasm)"}
.markup-2BOw-j .hljs[class~="awk" i]::before {content: "AWK"}
.markup-2BOw-j .hljs[class~="axapta" i]::before {content: "X++ (axapta)"}
.markup-2BOw-j .hljs[class~="x++" i]::before {content: "X++"}
.markup-2BOw-j .hljs[class~="bash" i]::before {content: "Bash"}
.markup-2BOw-j .hljs[class~="sh" i]::before {content: "Bash (sh)"}
.markup-2BOw-j .hljs[class~="zsh" i]::before {content: "Bash (zsh)"}
.markup-2BOw-j .hljs[class~="basic" i]::before {content: "BASIC"}
.markup-2BOw-j .hljs[class~="bnf" i]::before {content: "Backus–Naur Form (bnf)"}
.markup-2BOw-j .hljs[class~="brainfuck" i]::before {content: "Brainfuck"}
.markup-2BOw-j .hljs[class~="bf" i]::before {content: "Brainfuck (bf)"}
.markup-2BOw-j .hljs[class~="c" i]::before {content: "C"}
.markup-2BOw-j .hljs[class~="h" i]::before {content: "C (h)"}
.markup-2BOw-j .hljs[class~="c-like" i]::before {content: "C++ (c-like)"}
.markup-2BOw-j .hljs[class~="cc" i]::before {content: "C/C++ (cc)"}
.markup-2BOw-j .hljs[class~="c++" i]::before {content: "C/(C++)"}
.markup-2BOw-j .hljs[class~="cpp" i]::before {content: "C/C++ (cpp)"}
.markup-2BOw-j .hljs[class~="cxx" i]::before {content: "C/C++ (cxx)"}
.markup-2BOw-j .hljs[class~="hh" i]::before {content: "C/C++ (hh)"}
.markup-2BOw-j .hljs[class~="h++" i]::before {content: "C/C++ (h++)"}
.markup-2BOw-j .hljs[class~="hpp" i]::before {content: "C/C++ (hpp)"}
.markup-2BOw-j .hljs[class~="hxx" i]::before {content: "C/C++ (hxx)"}
.markup-2BOw-j .hljs[class~="cal" i]::before {content: "Client/server Application Language (cal)"}
.markup-2BOw-j .hljs[class~="capnproto" i]::before {content: "Cap'n Proto (capnproto)"}
.markup-2BOw-j .hljs[class~="capnp" i]::before {content: "Cap'n Proto (capnp)"}
.markup-2BOw-j .hljs[class~="ceylon" i]::before {content: "Ceylon"}
.markup-2BOw-j .hljs[class~="clean" i]::before {content: "Clean"}
.markup-2BOw-j .hljs[class~="icl" i]::before {content: "Clean (icl)"}
.markup-2BOw-j .hljs[class~="dcl" i]::before {content: "Clean (dcl)"}
.markup-2BOw-j .hljs[class~="clojure" i]::before {content: "Clojure"}
.markup-2BOw-j .hljs[class~="clj" i]::before {content: "Clojure (clj)"}
.markup-2BOw-j .hljs[class~="clojure-repl" i]::before {content: "Clojure-REPL"}
.markup-2BOw-j .hljs[class~="cmake" i]::before {content: "CMake"}
.markup-2BOw-j .hljs[class~="cmake.in" i]::before {content: "CMake (cmake.in)"}
.markup-2BOw-j .hljs[class~="coffeescript" i]::before {content: "CoffeeScript"}
.markup-2BOw-j .hljs[class~="coffee" i]::before {content: "(Coffee)Script"}
.markup-2BOw-j .hljs[class~="cson" i]::before {content: "CoffeeScript (cson)"}
.markup-2BOw-j .hljs[class~="iced" i]::before {content: "CoffeeScript (iced)"}
.markup-2BOw-j .hljs[class~="coq" i]::before {content: "Coq"}
.markup-2BOw-j .hljs[class~="cos" i]::before {content: "Caché Object Script (cos)"}
.markup-2BOw-j .hljs[class~="cls" i]::before {content: "Caché Object Script (cls)"}
.markup-2BOw-j .hljs[class~="crmsh" i]::before {content: "crmsh"}
.markup-2BOw-j .hljs[class~="crm" i]::before {content: "(crm)sh"}
.markup-2BOw-j .hljs[class~="pcmk" i]::before {content: "crmsh (pcmk)"}
.markup-2BOw-j .hljs[class~="crystal" i]::before {content: "Crystal"}
.markup-2BOw-j .hljs[class~="cr" i]::before {content: "Crystal (cr)"}
.markup-2BOw-j .hljs[class~="c#" i]::before {content: "C#"} /* broken */
.markup-2BOw-j .hljs[class~="csharp" i]::before {content: "C# (csharp)"}
.markup-2BOw-j .hljs[class~="cs" i]::before {content: "C# (cs)"}
.markup-2BOw-j .hljs[class~="csp" i]::before {content: "Content Security Policy (csp)"}
.markup-2BOw-j .hljs[class~="css" i]::before {content: "Cascading Style Sheets (css)"}
.markup-2BOw-j .hljs[class~="d" i]::before {content: "D"}
.markup-2BOw-j .hljs[class~="markdown" i]::before {content: "Markdown"}
.markup-2BOw-j .hljs[class~="md" i]::before {content: "Markdown (md)"}
.markup-2BOw-j .hljs[class~="mkd" i]::before {content: "Markdown (mkd)"}
.markup-2BOw-j .hljs[class~="mkdown" i]::before {content: "Markdown (mkdown)"}
.markup-2BOw-j .hljs[class~="dart" i]::before {content: "Dart"}
.markup-2BOw-j .hljs[class~="delphi" i]::before {content: "(Delphi) Object Pascal"}
.markup-2BOw-j .hljs[class~="dfm" i]::before {content: "Delphi Object Pascal (dfm)"}
.markup-2BOw-j .hljs[class~="dpr" i]::before {content: "Delphi Object Pascal (dpr)"}
.markup-2BOw-j .hljs[class~="pas" i]::before {content: "Delphi Object Pascal (pas)"}
.markup-2BOw-j .hljs[class~="pascal" i]::before {content: "Delphi Object (Pascal)"}
.markup-2BOw-j .hljs[class~="freepascal" i]::before {content: "Delphi Object Pascal (freepascal)"}
.markup-2BOw-j .hljs[class~="lazarus" i]::before {content: "Delphi Object Pascal (lazarus)"}
.markup-2BOw-j .hljs[class~="lfm" i]::before {content: "Delphi Object Pascal (lfm)"}
.markup-2BOw-j .hljs[class~="lpr" i]::before {content: "Delphi Object Pascal (lpr)"}
.markup-2BOw-j .hljs[class~="diff" i]::before {content: "Diff"}
.markup-2BOw-j .hljs[class~="patch" i]::before {content: "Diff (patch)"}
.markup-2BOw-j .hljs[class~="django" i]::before {content: "Django"}
.markup-2BOw-j .hljs[class~="jinja" i]::before {content: "Django (jinja)"}
.markup-2BOw-j .hljs[class~="dns" i]::before {content: "(DNS) Zone"}
.markup-2BOw-j .hljs[class~="bind" i]::before {content: "DNS Zone (bind)"}
.markup-2BOw-j .hljs[class~="zone" i]::before {content: "DNS (Zone)"}
.markup-2BOw-j .hljs[class~="dockerfile" i]::before {content: "Dockerfile"}
.markup-2BOw-j .hljs[class~="docker" i]::before {content: "(Docker)file"}
.markup-2BOw-j .hljs[class~="dos" i]::before {content: "(DOS) Batch"}
.markup-2BOw-j .hljs[class~="bat" i]::before {content: "DOS Batch (bat)"}
.markup-2BOw-j .hljs[class~="cmd" i]::before {content: "DOS Batch (cmd)"}
.markup-2BOw-j .hljs[class~="dsconfig" i]::before {content: "dsconfig"}
.markup-2BOw-j .hljs[class~="dts" i]::before {content: "Device Tree (dts)"}
.markup-2BOw-j .hljs[class~="dust" i]::before {content: "Dust"}
.markup-2BOw-j .hljs[class~="dst" i]::before {content: "Dust (dst)"}
.markup-2BOw-j .hljs[class~="ebnf" i]::before {content: "Extended Backus-Naur Form (ebnf)"}
.markup-2BOw-j .hljs[class~="elixir" i]::before {content: "Elixir"}
.markup-2BOw-j .hljs[class~="elm" i]::before {content: "Elm"}
.markup-2BOw-j .hljs[class~="ruby" i]::before {content: "Ruby"}
.markup-2BOw-j .hljs[class~="rb" i]::before {content: "Ruby (rb)"}
.markup-2BOw-j .hljs[class~="gemspec" i]::before {content: "Ruby (gemspc)"}
.markup-2BOw-j .hljs[class~="podspec" i]::before {content: "Ruby (podspec)"}
.markup-2BOw-j .hljs[class~="thor" i]::before {content: "Ruby (thor)"}
.markup-2BOw-j .hljs[class~="irb" i]::before {content: "Ruby (irb)"}
.markup-2BOw-j .hljs[class~="erb" i]::before {content: "Embedded Ruby (erb)"}
.markup-2BOw-j .hljs[class~="erlang" i]::before {content: "Erlang"}
.markup-2BOw-j .hljs[class~="erl" i]::before {content: "Erlang (erl)"}
.markup-2BOw-j .hljs[class~="erlang-repl" i]::before {content: "Erlang-REPL"}
.markup-2BOw-j .hljs[class~="excel" i]::before {content: "(Excel) formulae"}
.markup-2BOw-j .hljs[class~="xls" i]::before {content: "Excel formulae (xls)"}
.markup-2BOw-j .hljs[class~="xlsx" i]::before {content: "Excel formulae (xlsx)"}
.markup-2BOw-j .hljs[class~="fix" i]::before {content: "FIX";}
.markup-2BOw-j .hljs[class~="flix" i]::before {content: "Flix"}
.markup-2BOw-j .hljs[class~="fortran" i]::before {content: "Fortran"}
.markup-2BOw-j .hljs[class~="f90" i]::before {content: "Fortran (f90)"}
.markup-2BOw-j .hljs[class~="f95" i]::before {content: "Fortran (f95)"}
.markup-2BOw-j .hljs[class~="fsharp" i]::before {content: "F# (fsharp)"}
.markup-2BOw-j .hljs[class~="fs" i]::before {content: "F# (fs)"}
.markup-2BOw-j .hljs[class~="gams" i]::before {content: "GAMS"}
.markup-2BOw-j .hljs[class~="gms" i]::before {content: "GAMS (gms)"}
.markup-2BOw-j .hljs[class~="gauss" i]::before {content: "GAUSS"}
.markup-2BOw-j .hljs[class~="gss" i]::before {content: "GAUSS (gss)"}
.markup-2BOw-j .hljs[class~="gcode" i]::before {content: "G-code (ISO 6983) (gcode)"}
.markup-2BOw-j .hljs[class~="nc" i]::before {content: "G-code (ISO 6983) (nc)"}
.markup-2BOw-j .hljs[class~="gherkin" i]::before {content: "Gherkin"}
.markup-2BOw-j .hljs[class~="feature" i]::before {content: "Gherkin (feature)"}
.markup-2BOw-j .hljs[class~="glsl" i]::before {content: "GLSL"}
.markup-2BOw-j .hljs[class~="gml" i]::before {content: "GML"}
.markup-2BOw-j .hljs[class~="go" i]::before {content: "Go"}
.markup-2BOw-j .hljs[class~="golang" i]::before {content: "Go (golang)"}
.markup-2BOw-j .hljs[class~="golo" i]::before {content: "Golo"}
.markup-2BOw-j .hljs[class~="gradle" i]::before {content: "Gradle"}
.markup-2BOw-j .hljs[class~="groovy" i]::before {content: "Groovy"}
.markup-2BOw-j .hljs[class~="haml" i]::before {content: "HAML"}
.markup-2BOw-j .hljs[class~="handlebars" i]::before {content: "Handlebars"}
.markup-2BOw-j .hljs[class~="hbs" i]::before {content: "Handlebars (hbs)"}
.markup-2BOw-j .hljs[class~="html.handlebars" i]::before {content: "Handlebars (html.handlebars)"}
.markup-2BOw-j .hljs[class~="html.hbs" i]::before {content: "Handlebars (html.hbs)"}
.markup-2BOw-j .hljs[class~="htmlbars" i]::before {content: "HTMLBars"}
.markup-2BOw-j .hljs[class~="haskell" i]::before {content: "Haskell"}
.markup-2BOw-j .hljs[class~="hs" i]::before {content: "Haskell (hs)"}
.markup-2BOw-j .hljs[class~="haxe" i]::before {content: "Haxe"}
.markup-2BOw-j .hljs[class~="hx" i]::before {content: "Haxe (hx)"}
.markup-2BOw-j .hljs[class~="hsp" i]::before {content: "HSP"}
.markup-2BOw-j .hljs[class~="http" i]::before {content: "HTTP"}
.markup-2BOw-j .hljs[class~="https" i]::before {content: "HTTPS"}
.markup-2BOw-j .hljs[class~="hy" i]::before {content: "Hy"}
.markup-2BOw-j .hljs[class~="hylang" i]::before {content: "Hy (hylang)"}
.markup-2BOw-j .hljs[class~="inform7" i]::before {content: "Inform7"}
.markup-2BOw-j .hljs[class~="i7" i]::before {content: "Inform7 (i7)"}
.markup-2BOw-j .hljs[class~="ini" i]::before {content: "(INI),TOML"}
.markup-2BOw-j .hljs[class~="toml" i]::before {content: "INI,(TOML)"}
.markup-2BOw-j .hljs[class~="irpf90" i]::before {content: "IRPF90"}
.markup-2BOw-j .hljs[class~="isbl" i]::before {content: "ISBL"}
.markup-2BOw-j .hljs[class~="java" i]::before {content: "Java"}
.markup-2BOw-j .hljs[class~="jsp" i]::before {content: "Java (jsp)"}
.markup-2BOw-j .hljs[class~="javascript" i]::before {content: "JavaScript"}
.markup-2BOw-j .hljs[class~="js" i]::before {content: "JavaScript (js)"}
.markup-2BOw-j .hljs[class~="jsx" i]::before {content: "JavaScript (jsx)"}
.markup-2BOw-j .hljs[class~="mjs" i]::before {content: "JavaScript (mjs)"}
.markup-2BOw-j .hljs[class~="cjs" i]::before {content: "JavaScript (cjs)"}
.markup-2BOw-j .hljs[class~="jboss-cli" i]::before {content: "JBoss-CLI"}
.markup-2BOw-j .hljs[class~="wildfly-cli" i]::before {content: "WildFly-CLI"}
.markup-2BOw-j .hljs[class~="json" i]::before {content: "JSON"}
.markup-2BOw-j .hljs[class~="julia" i]::before {content: "Julia"}
.markup-2BOw-j .hljs[class~="julia-repl" i]::before {content: "Julia-REPL"}
.markup-2BOw-j .hljs[class~="kotlin" i]::before {content: "Kotlin"}
.markup-2BOw-j .hljs[class~="kt" i]::before {content: "Kotlin (kt)"}
.markup-2BOw-j .hljs[class~="lassoscript" i]::before {content: "LassoScript"}
.markup-2BOw-j .hljs[class~="lasso" i]::before {content: "(Lasso)Script"}
.markup-2BOw-j .hljs[class~="livescript" i]::before {content: "LiveScript"}
.markup-2BOw-j .hljs[class~="ls" i]::before {content: "LiveScript (ls)"}
.markup-2BOw-j .hljs[class~="latex" i]::before {content: "LaTeX"}
.markup-2BOw-j .hljs[class~="tex" i]::before {content: "LaTeX (tex)"} /* broken */
.markup-2BOw-j .hljs[class~="ldif" i]::before {content: "LDIF"}
.markup-2BOw-j .hljs[class~="leaf" i]::before {content: "Leaf"}
.markup-2BOw-j .hljs[class~="less" i]::before {content: "LESS"}
.markup-2BOw-j .hljs[class~="lisp" i]::before {content: "LISP"}
.markup-2BOw-j .hljs[class~="livecodeserver" i]::before {content: "LiveCodeServer"}
.markup-2BOw-j .hljs[class~="llvm" i]::before {content: "(LLVM) IR"}
.markup-2BOw-j .hljs[class~="lsl" i]::before {content: "Linden Scripting Language (lsl)"}
.markup-2BOw-j .hljs[class~="lua" i]::before {content: "Lua"}
.markup-2BOw-j .hljs[class~="makefile" i]::before {content: "Makefile"}
.markup-2BOw-j .hljs[class~="mk" i]::before {content: "Makefile (mk)"}
.markup-2BOw-j .hljs[class~="mak" i]::before {content: "Makefile (mak)"}
.markup-2BOw-j .hljs[class~="make" i]::before {content: "Makefile (make)"}
.markup-2BOw-j .hljs[class~="mathematica" i]::before {content: "Wolfram (Mathematica)"}
.markup-2BOw-j .hljs[class~="mma" i]::before {content: "Wolfram Mathematica (mma)"}
.markup-2BOw-j .hljs[class~="wl" i]::before {content: "Wolfram Mathematica (wl)"}
.markup-2BOw-j .hljs[class~="matlab" i]::before {content: "MatLab"}
.markup-2BOw-j .hljs[class~="maxima" i]::before {content: "Maxima"}
.markup-2BOw-j .hljs[class~="mel" i]::before {content: "Maya Embedded Language (mel)"}
.markup-2BOw-j .hljs[class~="mercury" i]::before {content: "Mercury"}
.markup-2BOw-j .hljs[class~="m" i]::before {content: "Mercury (m)"}
.markup-2BOw-j .hljs[class~="moo" i]::before {content: "Mercury (moo)"}
.markup-2BOw-j .hljs[class~="mipsasm" i]::before {content: "MIPS Assembly (mipsasm)"}
.markup-2BOw-j .hljs[class~="mips" i]::before {content: "(MIPS) Assembly"}
.markup-2BOw-j .hljs[class~="mizar" i]::before {content: "Mizar"}
.markup-2BOw-j .hljs[class~="perl" i]::before {content: "Perl"}
.markup-2BOw-j .hljs[class~="pl" i]::before {content: "Perl (pl)"}
.markup-2BOw-j .hljs[class~="pm" i]::before {content: "Perl (pm)"}
.markup-2BOw-j .hljs[class~="mojolicious" i]::before {content: "Mojolicious"}
.markup-2BOw-j .hljs[class~="monkey" i]::before {content: "Monkey"}
.markup-2BOw-j .hljs[class~="moonscript" i]::before {content: "MoonScript"}
.markup-2BOw-j .hljs[class~="moon" i]::before {content: "(Moon)Script"}
.markup-2BOw-j .hljs[class~="n1ql" i]::before {content: "N1QL"}
.markup-2BOw-j .hljs[class~="nginx" i]::before {content: "(Nginx) config"}
.markup-2BOw-j .hljs[class~="nginxconf" i]::before {content: "Nginx config (nginxconf)"}
.markup-2BOw-j .hljs[class~="nim" i]::before {content: "Nim"}
.markup-2BOw-j .hljs[class~="nix" i]::before {content: "Nix"}
.markup-2BOw-j .hljs[class~="nixos" i]::before {content: "Nix (nixos)"}
.markup-2BOw-j .hljs[class~="node-repl" i]::before {content: "Node-REPL"}
.markup-2BOw-j .hljs[class~="nsis" i]::before {content: "NSIS"}
.markup-2BOw-j .hljs[class~="objectivec" i]::before {content: "Objective-C (objectivec)"}
.markup-2BOw-j .hljs[class~="mm" i]::before {content: "Objective-C (mm)"}
.markup-2BOw-j .hljs[class~="objc" i]::before {content: "Objective-C (objc)"}
.markup-2BOw-j .hljs[class~="obj-c" i]::before {content: "Objective-C (obj-c)"}
.markup-2BOw-j .hljs[class~="obj-c++" i]::before {content: "Objective-C (obj-c++)"}
.markup-2BOw-j .hljs[class~="objective-c++" i]::before {content: "Objective-C (objective-c++)"}
.markup-2BOw-j .hljs[class~="ocaml" i]::before {content: "OCaml"}
.markup-2BOw-j .hljs[class~="openscad" i]::before {content: "OpenSCAD"}
.markup-2BOw-j .hljs[class~="scad" i]::before {content: "Open(SCAD)"}
.markup-2BOw-j .hljs[class~="oxygene" i]::before {content: "Oxygene"}
.markup-2BOw-j .hljs[class~="parser3" i]::before {content: "Parser3"}
.markup-2BOw-j .hljs[class~="pf" i]::before {content: "Packet Filter config (pf)"}
.markup-2BOw-j .hljs[class~="pf.conf" i]::before {content: "Packet Filter config (pf.conf)"}
.markup-2BOw-j .hljs[class~="pgsql" i]::before {content: "PostgreSQL & PL/pgSQL (pgsql)"}
.markup-2BOw-j .hljs[class~="postgres" i]::before {content: "PostgreSQL & PL/pgSQL (postgres)"}
.markup-2BOw-j .hljs[class~="postgresql" i]::before {content: "PostgreSQL & PL/pgSQL (postgresql)"}
.markup-2BOw-j .hljs[class~="php" i]::before {content: "PHP"}
.markup-2BOw-j .hljs[class~="php3" i]::before {content: "PHP (php3)"}
.markup-2BOw-j .hljs[class~="php4" i]::before {content: "PHP (php4)"}
.markup-2BOw-j .hljs[class~="php5" i]::before {content: "PHP (php5)"}
.markup-2BOw-j .hljs[class~="php6" i]::before {content: "PHP (php6)"}
.markup-2BOw-j .hljs[class~="php7" i]::before {content: "PHP (php7)"}
.markup-2BOw-j .hljs[class~="php8" i]::before {content: "PHP (php8)"}
.markup-2BOw-j .hljs[class~="php-template" i]::before {content: "PHP-Template"}
.markup-2BOw-j .hljs[class~="plaintext" i]::before {content: "Plaintext"}
.markup-2BOw-j .hljs[class~="text" i]::before {content: "Plain(text)"}
.markup-2BOw-j .hljs[class~="txt" i]::before {content: "Plaintext (txt)"}
.markup-2BOw-j .hljs[class~="pony" i]::before {content: "Pony"}
.markup-2BOw-j .hljs[class~="powershell" i]::before {content: "PowerShell"}
.markup-2BOw-j .hljs[class~="ps" i]::before {content: "PowerShell (ps)"}
.markup-2BOw-j .hljs[class~="ps1" i]::before {content: "PowerShell (ps1)"}
.markup-2BOw-j .hljs[class~="processing" i]::before {content: "Processing"}
.markup-2BOw-j .hljs[class~="prolog" i]::before {content: "Prolog"}
.markup-2BOw-j .hljs[class~="properties" i]::before {content: "Properties"}
.markup-2BOw-j .hljs[class~="protobuf" i]::before {content: "Protocol Buffers (protobuf)"}
.markup-2BOw-j .hljs[class~="puppet" i]::before {content: "Puppet"}
.markup-2BOw-j .hljs[class~="pp" i]::before {content: "Puppet (pp)"}
.markup-2BOw-j .hljs[class~="purebasic" i]::before {content: "PureBASIC"}
.markup-2BOw-j .hljs[class~="pb" i]::before {content: "PureBASIC (pb)"}
.markup-2BOw-j .hljs[class~="pbi" i]::before {content: "PureBASIC (pbi)"}
.markup-2BOw-j .hljs[class~="python" i]::before {content: "Python"}
.markup-2BOw-j .hljs[class~="py" i]::before {content: "Python (py)"}
.markup-2BOw-j .hljs[class~="gyp" i]::before {content: "Python (gyp)"}
.markup-2BOw-j .hljs[class~="ipython" i]::before {content: "Python (ipython)"}
.markup-2BOw-j .hljs[class~="python-repl" i]::before {content: "Python-REPL"}
.markup-2BOw-j .hljs[class~="pycon" i]::before {content: "Python-Repl (pycon)"}
.markup-2BOw-j .hljs[class~="profile" i]::before {content: "Python (profile)"}
.markup-2BOw-j .hljs[class~="q" i]::before {content: "Q"}
.markup-2BOw-j .hljs[class~="k" i]::before {content: "Q (k)"}
.markup-2BOw-j .hljs[class~="kdb" i]::before {content: "Q (kdb)"}
.markup-2BOw-j .hljs[class~="qml" i]::before {content: "QML"}
.markup-2BOw-j .hljs[class~="qt" i]::before {content: "QML (qt)"}
.markup-2BOw-j .hljs[class~="r" i]::before {content: "R"}
.markup-2BOw-j .hljs[class~="reasonml" i]::before {content: "ReasonML"}
.markup-2BOw-j .hljs[class~="re" i]::before {content: "ReasonML (re)"}
.markup-2BOw-j .hljs[class~="rib" i]::before {content: "RenderMan (RIB)"}
.markup-2BOw-j .hljs[class~="rsl" i]::before {content: "RenderMan (RSL)"}
.markup-2BOw-j .hljs[class~="roboconf" i]::before {content: "Roboconf"}
.markup-2BOw-j .hljs[class~="graph" i]::before {content: "Roboconf (graph)"}
.markup-2BOw-j .hljs[class~="instances" i]::before {content: "Roboconf (instances)"}
.markup-2BOw-j .hljs[class~="routeros" i]::before {content: "Microtik (RouterOS) script"}
.markup-2BOw-j .hljs[class~="mikrotik" i]::before {content: "Microtik RouterOS script (mikrotik)"}
.markup-2BOw-j .hljs[class~="ruleslanguage" i]::before {content: "Oracle Rules Language (ruleslanguage)"}
.markup-2BOw-j .hljs[class~="rust" i]::before {content: "Rust"}
.markup-2BOw-j .hljs[class~="rs" i]::before {content: "Rust (rs)"}
.markup-2BOw-j .hljs[class~="sas" i]::before {content: "SAS"}
.markup-2BOw-j .hljs[class~="scala" i]::before {content: "Scala"}
.markup-2BOw-j .hljs[class~="scheme" i]::before {content: "Scheme"}
.markup-2BOw-j .hljs[class~="scilab" i]::before {content: "Scilab"}
.markup-2BOw-j .hljs[class~="sci" i]::before {content: "(Sci)lab"}
.markup-2BOw-j .hljs[class~="scss" i]::before {content: "SCSS"}
.markup-2BOw-j .hljs[class~="shell" i]::before {content: "(Shell) Session"}
.markup-2BOw-j .hljs[class~="console" i]::before {content: "Shell Session (console)"}
.markup-2BOw-j .hljs[class~="smali" i]::before {content: "Smali"}
.markup-2BOw-j .hljs[class~="smalltalk" i]::before {content: "Smalltalk"}
.markup-2BOw-j .hljs[class~="st" i]::before {content: "Smalltalk (st)"}
.markup-2BOw-j .hljs[class~="sml" i]::before {content: "SML"}
.markup-2BOw-j .hljs[class~="ml" i]::before {content: "S(ML)"}
.markup-2BOw-j .hljs[class~="sqf" i]::before {content: "SQF"}
.markup-2BOw-j .hljs[class~="sql" i]::before {content: "SQL"}
.markup-2BOw-j .hljs[class~="sql_more" i]::before {content: "SQL_more"}
.markup-2BOw-j .hljs[class~="mysql" i]::before {content: "SQL_more (mysql)"}
.markup-2BOw-j .hljs[class~="oracle" i]::before {content: "SQL_more (oracle)"}
.markup-2BOw-j .hljs[class~="stan" i]::before {content: "Stan"}
.markup-2BOw-j .hljs[class~="stanfuncs" i]::before {content: "Stan (stanfuncs)"}
.markup-2BOw-j .hljs[class~="stata" i]::before {content: "Stata"}
.markup-2BOw-j .hljs[class~="do" i]::before {content: "Stata (do)"}
.markup-2BOw-j .hljs[class~="ado" i]::before {content: "Stata (ado)"}
.markup-2BOw-j .hljs[class~="step21" i]::before {content: "STEP Part 21 (step21)"}
.markup-2BOw-j .hljs[class~="step" i]::before {content: "(STEP) Part 21"}
.markup-2BOw-j .hljs[class~="stp" i]::before {content: "STEP Part 21 (stp)"}
.markup-2BOw-j .hljs[class~="p21" i]::before {content: "STEP Part 21 (p21)"}
.markup-2BOw-j .hljs[class~="stylus" i]::before {content: "Stylus"}
.markup-2BOw-j .hljs[class~="styl" i]::before {content: "Stylus (styl)"}
.markup-2BOw-j .hljs[class~="subunit" i]::before {content: "SubUnit"}
.markup-2BOw-j .hljs[class~="swift" i]::before {content: "Swift"}
.markup-2BOw-j .hljs[class~="taggerscript" i]::before {content: "TaggerScript"}
.markup-2BOw-j .hljs[class~="yaml" i]::before {content: "YAML"}
.markup-2BOw-j .hljs[class~="yml" i]::before {content: "YAML (yml)"}
.markup-2BOw-j .hljs[class~="tap" i]::before {content: "Test Anything Protocol (tap)"}
.markup-2BOw-j .hljs[class~="tcl" i]::before {content: "Tcl"}
.markup-2BOw-j .hljs[class~="tk" i]::before {content: "Tcl (tk)"}
.markup-2BOw-j .hljs[class~="thrift" i]::before {content: "Thrift"}
.markup-2BOw-j .hljs[class~="tp" i]::before {content: "TP"}
.markup-2BOw-j .hljs[class~="twig" i]::before {content: "Twig"}
.markup-2BOw-j .hljs[class~="craftcms" i]::before {content: "Twig (craftcms)"}
.markup-2BOw-j .hljs[class~="typescript" i]::before {content: "TypeScript"}
.markup-2BOw-j .hljs[class~="ts" i]::before {content: "TypeScript (ts)"}
.markup-2BOw-j .hljs[class~="vala" i]::before {content: "Vala"}
.markup-2BOw-j .hljs[class~="vbnet" i]::before {content: "Visual Basic .NET (vbnet)"}
.markup-2BOw-j .hljs[class~="vb" i]::before {content: "Visual Basic .NET (vb)"}
.markup-2BOw-j .hljs[class~="vbscript" i]::before {content: "VBScript"}
.markup-2BOw-j .hljs[class~="vbs" i]::before {content: "VBScript (vbs)"}
.markup-2BOw-j .hljs[class~="vbscript-html" i]::before {content: "VBScript-HTML"}
.markup-2BOw-j .hljs[class~="verilog" i]::before {content: "Verilog"}
.markup-2BOw-j .hljs[class~="v" i]::before {content: "Verilog (v)"}
.markup-2BOw-j .hljs[class~="sv" i]::before {content: "Verilog (sv)"}
.markup-2BOw-j .hljs[class~="svh" i]::before {content: "Verilog (svh)"}
.markup-2BOw-j .hljs[class~="vhdl" i]::before {content: "VHDL"}
.markup-2BOw-j .hljs[class~="vim" i]::before {content: "(Vim) Script"}
.markup-2BOw-j .hljs[class~="x86asm" i]::before {content: "Intel x86 Assembly (x86asm)"}
.markup-2BOw-j .hljs[class~="xl" i]::before {content: "XL"}
.markup-2BOw-j .hljs[class~="tao" i]::before {content: "XL (tao)"}
.markup-2BOw-j .hljs[class~="xquery" i]::before {content: "XQuery"}
.markup-2BOw-j .hljs[class~="xpath" i]::before {content: "XQuery (xpath)"}
.markup-2BOw-j .hljs[class~="xq" i]::before {content: "XQuery (xq)"}
.markup-2BOw-j .hljs[class~="zephir" i]::before {content: "Zephir"}
.markup-2BOw-j .hljs[class~="zep" i]::before {content: "Zephir (zep)"}
